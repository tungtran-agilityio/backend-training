name: Build and Push Docker Image

on:
  workflow_dispatch:

env:
  DOCKER_IMAGE: python-api-docker
  DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4.2.2

      - name: Set up Python
        uses: actions/setup-python@v5.6.0
        with:
          python-version: '3.12'

      - name: Install uv
        run: pip install uv

      - name: Create virtual environment
        working-directory: ./docker/python-api-docker
        run: uv venv

      - name: Install dependencies
        working-directory: ./docker/python-api-docker
        run: |
          source .venv/bin/activate
          uv sync

      - name: Run tests
        working-directory: ./docker/python-api-docker
        run: |
          source .venv/bin/activate
          if [ -d "tests" ]; then
            uv run pytest tests/ --cov=. --cov-report=term-missing
          else
            echo "No tests directory found"
          fi

  build:
    needs: test
    runs-on: ubuntu-latest
    outputs:
      image-tags: ${{ steps.meta.outputs.tags }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4.2.2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3.10.0

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5.7.0
        with:
          images: ${{ env.DOCKER_USERNAME }}/${{ env.DOCKER_IMAGE }}
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=sha,format=short

      - name: Build Docker image
        uses: docker/build-push-action@v6.18.0
        with:
          context: ./docker/python-api-docker
          push: false
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          outputs: type=docker,dest=/tmp/image.tar

      - name: Upload Docker image
        uses: actions/upload-artifact@v4
        with:
          name: docker-image
          path: /tmp/image.tar
          retention-days: 1

  push:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Download Docker image
        uses: actions/download-artifact@v4
        with:
          name: docker-image
          path: /tmp

      - name: Load Docker image
        run: docker load --input /tmp/image.tar

      - name: Login to DockerHub
        uses: docker/login-action@v3.4.0
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Push Docker image
        uses: docker/build-push-action@v6.18.0
        with:
          context: ./docker/python-api-docker
          push: true
          tags: ${{ needs.build.outputs.image-tags }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
