direction: right

# ================================
# C4 Container Diagram - Car Sharing Platform
# ================================

# Users (same as context)
Car_Owner: {
  shape: c4-person
  label: |md
    ## Car Owner
    **[Person]**
    
    Vehicle owners listing cars
  |
  style: {
    fill: "#bbdefb"
    stroke: "#1565c0"
    stroke-width: 3
    font-size: 16
  }
}

Car_Renter: {
  shape: c4-person
  label: |md
    ## Car Renter
    **[Person]**
    
    Users booking vehicles
  |
  style: {
    fill: "#c8e6c9"
    stroke: "#2e7d32"
    stroke-width: 3
    font-size: 16
  }
}

Car_Sharing_Platform: |md
  ## Car Sharing Platform
  [Software System]
| {
  shape: rectangle
  label.near: bottom-left
  style: {
    fill: "#ffffff"
    stroke: "#7b1fa2"
    stroke-width: 6
    stroke-dash: 5
  }
}

Platform_Admin: {
  shape: c4-person
  label: |md
    ## Platform Admin
    **[Person]**
    
    Support and operations staff
  |
  style: {
    fill: "#ffe0b2"
    stroke: "#ef6c00"
    stroke-width: 3
    font-size: 16
  }
}

# Frontend Applications
Car_Sharing_Platform.Mobile_Application: {
  label: |md
    ## Mobile Application
    **[Container: React Native]**
    
    Cross-platform mobile app.
    
    **Core Features:**
    - KYC onboarding with camera integration
    - Location-based car search with maps
    - Real-time messaging between users
    - Trip handoff with mandatory photo capture
    - Push notifications and offline support
  |
  style: {
    fill: "#e3f2fd"
    stroke: "#1976d2"
    stroke-width: 3
    font-size: 16
  }
}

Car_Sharing_Platform.Owner_Web_Dashboard: {
  label: |md
    ## Owner Web Dashboard
    **[Container: ReactJS]**
    
    Responsive web application for car owners.
    
    **Core Features:**
    - Vehicle listing management
    - Booking request management and approvals
    - Revenue analytics and payout tracking
    - Availability calendar with drag-and-drop
    - Photo upload with drag-and-drop interface
  |
  style: {
    fill: "#e8f5e8"
    stroke: "#388e3c"
    stroke-width: 3
    font-size: 16
  }
}

Car_Sharing_Platform.Admin_Dashboard: {
  label: |md
    ## Admin Dashboard
    **[Container: ReactJS]**
    
    Internal operations and support interface.
    
    **Core Features:**
    - User management
    - Vehicle listing moderation and approval
    - Booking monitoring and intervention tools
    - Support ticket management
    - Analytics: user metrics
    - KYC review and manual verification workflows
  |
  style: {
    fill: "#fff3e0"
    stroke: "#f57c00"
    stroke-width: 3
    font-size: 16
  }
}



# Backend Services (inside Car Sharing Platform)
Car_Sharing_Platform.API_Gateway: {
  label: |md
    ## API Gateway
    **[Container: NestJS/Node.js]**
    
    RESTful API serving all client applications.
    
    **Core Features:**
    - Authentication & authorization
    - Rate limiting
    - Input validation and sanitization
    - API versioning and documentation
    - Request logging and monitoring
    
    **Security Features:**
    - CSRF protection
    - CORS configuration
    - Request rate limiting per user/IP
    - Input sanitization against injection attacks
  |
  style: {
    fill: "#e1bee7"
    stroke: "#6a1b9a"
    stroke-width: 3
    font-size: 16
  }
}

Car_Sharing_Platform.Core: |md
  ## Core System
| {
  shape: rectangle
  label.near: bottom-left
  style: {
    fill: "#ffffff"
    stroke: "#808080"
    stroke-width: 6
    stroke-dash: 5
  }
}

Car_Sharing_Platform.Core.Booking_Service: {
  label: |md
    ## Booking Domain
    Handles the core booking lifecycle.
    
    **Core Features:**
    - Booking request creation and management
    - Auto-expiry of pending requests
    - Availability conflict detection
    - Trip status tracking
    - Late return penalty calculation
    - Calendar integration and synchronization
  |
  style: {
    fill: "#f3e5f5"
    stroke: "#7b1fa2"
    stroke-width: 3
    font-size: 16
  }
}

Car_Sharing_Platform.Core.Payment_Service: {
  label: |md
    ## Payment Domain
    Manages all financial transactions.
    
    **Core Features:**
    - Stripe integration for card vaulting
    - Pre-authorization of security deposits
    - Rental fee capture on booking acceptance
    - Deposit hold and release
    - Platform service fee calculation and split
    - Payout processing to car owners
    - Transaction history and reporting
  |
  style: {
    fill: "#ffebee"
    stroke: "#d32f2f"
    stroke-width: 3
    font-size: 16
  }
}

Car_Sharing_Platform.Core.User_Service: {
  label: |md
    ## User Domain
    User lifecycle and profile management.
    
    **Core Features:**
    - User registration and onboarding
    - KYC workflow orchestration
    - Profile management and updates
    - Identity verification status tracking
    - Account suspension and ban management
  |
  style: {
    fill: "#e0f2f1"
    stroke: "#00796b"
    stroke-width: 3
    font-size: 16
  }
}

# Data Layer (inside Car Sharing Platform)
Car_Sharing_Platform.Database: {
  label: |md
    ## Primary Database
    **[Container: PostgreSQL RDS Multi-AZ]**
    
    Main transactional data store.
  
    **Core Features:**
    - Multi-AZ deployment
    - Automated backups
    - Read replicas
  |
  style: {
    fill: "#e8eaf6"
    stroke: "#3f51b5"
    stroke-width: 3
    font-size: 16
  }
}

Car_Sharing_Platform.Cache_Layer: {
  label: |md
    ## Cache Layer
    **[Container: Redis Cluster]**
    
    High-performance caching and session management.
    
    **Core Features:**
    - User session storage
    - Rate limiting counters and sliding windows
    - Search result caching
    - Frequently accessed vehicle listings
    - Real-time messaging temporary storage
    - OTP storage for phone verification
  |
  style: {
    fill: "#f1f8e9"
    stroke: "#689f38"
    stroke-width: 3
    font-size: 16
  }
}

# External Systems
Payment_Gateway: {
  label: |md
    ## Payment Gateway
    **[External: Stripe/Local PSP]**
    
    Payment processing provider
  |
  style: {
    fill: "#ffcdd2"
    stroke: "#c62828"
    stroke-width: 3
    font-size: 16
  }
}

KYC_Service: {
  label: |md
    ## KYC Service
    **[External: Identity Verification]**
    
    Document OCR and fraud detection
  |
  style: {
    fill: "#b2dfdb"
    stroke: "#00695c"
    stroke-width: 3
    font-size: 16
  }
}

Communication_Service: {
  label: |md
    ## Communication Service
    **[External: SMS/Email/Push]**
    
    Multi-channel notifications
  |
  style: {
    fill: "#dcedc8"
    stroke: "#558b2f"
    stroke-width: 3
    font-size: 16
  }
}

File_Storage: {
  label: |md
    ## File Storage
    **[External: AWS S3]**
    
    Image and document storage
  |
  style: {
    fill: "#c5cae9"
    stroke: "#303f9f"
    stroke-width: 3
    font-size: 16
  }
}

# User to Frontend Relationships
Car_Owner -> Car_Sharing_Platform.Mobile_Application: |md
  Uses for vehicle management
  [HTTPS]
  
  Mobile listing, bookings, handoffs
| {
  style: {
    stroke: "#1565c0"
    stroke-width: 3
    font-size: 14
  }
}

Car_Owner -> Car_Sharing_Platform.Owner_Web_Dashboard: |md
  Manages vehicles and calendar
  [HTTPS]
  
  Desktop listing management
| {
  style: {
    stroke: "#388e3c"
    stroke-width: 3
    font-size: 14
  }
}

Car_Renter -> Car_Sharing_Platform.Mobile_Application: |md
  Uses for car booking
  [HTTPS]
  
  Search, book, communicate, handoff
| {
  style: {
    stroke: "#2e7d32"
    stroke-width: 3
    font-size: 14
  }
}

Platform_Admin -> Car_Sharing_Platform.Admin_Dashboard: |md
  Manages platform operations
  [HTTPS]
  
  User management, support, analytics
| {
  style: {
    stroke: "#ef6c00"
    stroke-width: 3
    font-size: 14
  }
}

# Frontend to Backend Relationships
Car_Sharing_Platform.Mobile_Application -> Car_Sharing_Platform.API_Gateway: |md
  Makes API calls
  [JSON/HTTPS]
  
  All mobile functionality
| {
  style: {
    stroke: "#1976d2"
    stroke-width: 3
    font-size: 14
  }
}

Car_Sharing_Platform.Owner_Web_Dashboard -> Car_Sharing_Platform.API_Gateway: |md
  Makes API calls
  [JSON/HTTPS]
  
  Owner dashboard features
| {
  style: {
    stroke: "#388e3c"
    stroke-width: 3
    font-size: 14
  }
}

Car_Sharing_Platform.Admin_Dashboard -> Car_Sharing_Platform.API_Gateway: |md
  Makes admin API calls
  [JSON/HTTPS]
  
  Administrative operations
| {
  style: {
    stroke: "#f57c00"
    stroke-width: 3
    font-size: 14
  }
}

# Backend Service Relationships
Car_Sharing_Platform.API_Gateway -> Car_Sharing_Platform.Core.Booking_Service: |md
  Routes booking requests
  [Internal RPC]
  
  Booking lifecycle management
| {
  style: {
    stroke: "#6a1b9a"
    stroke-width: 3
    font-size: 14
  }
}

Car_Sharing_Platform.API_Gateway -> Car_Sharing_Platform.Core.Payment_Service: |md
  Routes payment requests
  [Internal RPC]
  
  Financial transactions
| {
  style: {
    stroke: "#d32f2f"
    stroke-width: 3
    font-size: 14
  }
}

Car_Sharing_Platform.API_Gateway -> Car_Sharing_Platform.Core.User_Service: |md
  Routes user requests
  [Internal RPC]
  
  Profile and KYC management
| {
  style: {
    stroke: "#00796b"
    stroke-width: 3
    font-size: 14
  }
}

# Backend to Data Relationships
Car_Sharing_Platform.Core.Booking_Service -> Car_Sharing_Platform.Database: |md
  Reads/writes booking data
  [PostgreSQL Protocol]
  
  Booking CRUD operations
| {
  style: {
    stroke: "#3f51b5"
    stroke-width: 3
    font-size: 14
  }
}

Car_Sharing_Platform.Core.Payment_Service -> Car_Sharing_Platform.Database: |md
  Reads/writes payment data
  [PostgreSQL Protocol]
  
  Transaction records
| {
  style: {
    stroke: "#3f51b5"
    stroke-width: 3
    font-size: 14
  }
}

Car_Sharing_Platform.Core.User_Service -> Car_Sharing_Platform.Database: |md
  Reads/writes user data
  [PostgreSQL Protocol]
  
  User profile management
| {
  style: {
    stroke: "#3f51b5"
    stroke-width: 3
    font-size: 14
  }
}

Car_Sharing_Platform.API_Gateway -> Car_Sharing_Platform.Cache_Layer: |md
  Session and rate limiting
  [Redis Protocol]
  
  JWT sessions, rate limits
| {
  style: {
    stroke: "#689f38"
    stroke-width: 3
    font-size: 14
  }
}

# Backend to External Systems
Car_Sharing_Platform.Core.Payment_Service -> Payment_Gateway: |md
  Processes payments
  [HTTPS/Stripe API]
  
  Card vault, capture, payouts
| {
  style: {
    stroke: "#c62828"
    stroke-width: 3
    font-size: 14
  }
}

Car_Sharing_Platform.Core.User_Service -> KYC_Service: |md
  Verifies identities
  [HTTPS/API]
  
  Document OCR, fraud check
| {
  style: {
    stroke: "#00695c"
    stroke-width: 3
    font-size: 14
  }
}

Car_Sharing_Platform.API_Gateway -> Communication_Service: |md
  Sends notifications
  [HTTPS/SMS/Email APIs]
  
  OTP, booking alerts
| {
  style: {
    stroke: "#558b2f"
    stroke-width: 3
    font-size: 14
  }
}

Car_Sharing_Platform.API_Gateway -> File_Storage: |md
  Stores/retrieves files
  [HTTPS/S3 API]
  
  Photos, presigned uploads
| {
  style: {
    stroke: "#303f9f"
    stroke-width: 3
    font-size: 14
  }
}

# Legend
  vars: {
    d2-legend: {
      "Car_Owner": {shape: c4-person; style.fill: "#bbdefb"; style.stroke: "#1565c0"}
      "Car_Renter": {shape: c4-person; style.fill: "#c8e6c9"; style.stroke: "#2e7d32"}
      "Platform_Admin": {shape: c4-person; style.fill: "#ffe0b2"; style.stroke: "#ef6c00"}
      "Car_Sharing_Platform.Mobile_Application": {style.fill: "#e3f2fd"; style.stroke: "#1976d2"}
      "Car_Sharing_Platform.Owner_Web_Dashboard": {style.fill: "#e3f2fd"; style.stroke: "#1976d2"}
      "Car_Sharing_Platform.Admin_Dashboard": {style.fill: "#e3f2fd"; style.stroke: "#1976d2"}
      "Car_Sharing_Platform.API_Gateway": {style.fill: "#e1bee7"; style.stroke: "#6a1b9a"}
      "Car_Sharing_Platform.Core.Booking_Service": {style.fill: "#f3e5f5"; style.stroke: "#7b1fa2"}
      "Car_Sharing_Platform.Core.Payment_Service": {style.fill: "#ffebee"; style.stroke: "#d32f2f"}
      "Car_Sharing_Platform.Core.User_Service": {style.fill: "#e0f2f1"; style.stroke: "#00796b"}
      "Car_Sharing_Platform.Database": {style.fill: "#e8eaf6"; style.stroke: "#3f51b5"}
      "Car_Sharing_Platform.Cache_Layer": {style.fill: "#f1f8e9"; style.stroke: "#689f38"}
      "Payment_Gateway": {style.fill: "#ffcdd2"; style.stroke: "#c62828"}
      "KYC_Service": {style.fill: "#b2dfdb"; style.stroke: "#00695c"}
      "Communication_Service": {style.fill: "#dcedc8"; style.stroke: "#558b2f"}
      "File_Storage": {style.fill: "#c5cae9"; style.stroke: "#303f9f"}
    }
  } 