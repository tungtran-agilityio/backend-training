version: '3.8'

services:
  # Kafka ecosystem
  zookeeper:
    image: confluentinc/cp-zookeeper:7.4.0
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"

  kafka:
    image: confluentinc/cp-kafka:7.4.0
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: true

  # Database
  postgres:
    image: postgres:15
    environment:
      POSTGRES_DB: notification_service
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data

  # Redis for rate limiting
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"

  # Notification API Service
  notification-api:
    build: .
    ports:
      - "8000:8000"
    environment:
      - DATABASE_URL=postgresql://postgres:postgres@postgres:5432/notification_service
      - KAFKA_BOOTSTRAP_SERVERS=kafka:9092
      - REDIS_URL=redis://redis:6379
      - LOG_LEVEL=INFO
    depends_on:
      - postgres
      - kafka
      - redis
    command: python -m src.api.main

  # Push Notification Worker
  push-worker:
    build: .
    environment:
      - DATABASE_URL=postgresql://postgres:postgres@postgres:5432/notification_service
      - KAFKA_BOOTSTRAP_SERVERS=kafka:9092
      - REDIS_URL=redis://redis:6379
      - LOG_LEVEL=INFO
    depends_on:
      - postgres
      - kafka
      - redis
    command: python -m src.workers.push

  # SMS Worker
  sms-worker:
    build: .
    environment:
      - DATABASE_URL=postgresql://postgres:postgres@postgres:5432/notification_service
      - KAFKA_BOOTSTRAP_SERVERS=kafka:9092
      - REDIS_URL=redis://redis:6379
      - LOG_LEVEL=INFO
    depends_on:
      - postgres
      - kafka
      - redis
    command: python -m src.workers.sms

  # Email Worker
  email-worker:
    build: .
    environment:
      - DATABASE_URL=postgresql://postgres:postgres@postgres:5432/notification_service
      - KAFKA_BOOTSTRAP_SERVERS=kafka:9092
      - REDIS_URL=redis://redis:6379
      - LOG_LEVEL=INFO
    depends_on:
      - postgres
      - kafka
      - redis
    command: python -m src.workers.email

volumes:
  postgres_data: 